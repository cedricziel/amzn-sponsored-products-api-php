<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace cedricziel\amznsponsoredproductsapiphp\Generated\Normalizer;

use cedricziel\amznsponsoredproductsapiphp\Generated\Runtime\Normalizer\CheckArray;
use cedricziel\amznsponsoredproductsapiphp\Generated\Runtime\Normalizer\ValidatorTrait;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\HttpKernel\Kernel;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

if (!class_exists(Kernel::class) or (Kernel::MAJOR_VERSION >= 7 or Kernel::MAJOR_VERSION === 6 and Kernel::MINOR_VERSION === 4)) {
    class SponsoredProductsCopyCampaignTaskDetailsNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization(mixed $data, string $type, ?string $format = null, array $context = []): bool
        {
            return \cedricziel\amznsponsoredproductsapiphp\Generated\Model\SponsoredProductsCopyCampaignTaskDetails::class === $type;
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && cedricziel\amznsponsoredproductsapiphp\Generated\Model\SponsoredProductsCopyCampaignTaskDetails::class === get_class($data);
        }

        public function denormalize(mixed $data, string $type, ?string $format = null, array $context = []): mixed
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \cedricziel\amznsponsoredproductsapiphp\Generated\Model\SponsoredProductsCopyCampaignTaskDetails();
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('targetMarketplaceId', $data)) {
                $object->setTargetMarketplaceId($data['targetMarketplaceId']);
                unset($data['targetMarketplaceId']);
            }
            if (\array_key_exists('targetCampaignId', $data)) {
                $object->setTargetCampaignId($data['targetCampaignId']);
                unset($data['targetCampaignId']);
            }
            if (\array_key_exists('percentageCompleted', $data)) {
                $object->setPercentageCompleted($data['percentageCompleted']);
                unset($data['percentageCompleted']);
            }
            if (\array_key_exists('sourceMarketplaceId', $data)) {
                $object->setSourceMarketplaceId($data['sourceMarketplaceId']);
                unset($data['sourceMarketplaceId']);
            }
            if (\array_key_exists('sourceCampaignId', $data)) {
                $object->setSourceCampaignId($data['sourceCampaignId']);
                unset($data['sourceCampaignId']);
            }
            if (\array_key_exists('sourceAdvertiserId', $data)) {
                $object->setSourceAdvertiserId($data['sourceAdvertiserId']);
                unset($data['sourceAdvertiserId']);
            }
            if (\array_key_exists('targetAdvertiserId', $data)) {
                $object->setTargetAdvertiserId($data['targetAdvertiserId']);
                unset($data['targetAdvertiserId']);
            }
            if (\array_key_exists('status', $data)) {
                $object->setStatus($data['status']);
                unset($data['status']);
            }
            if (\array_key_exists('errorDetails', $data)) {
                $values = [];
                foreach ($data['errorDetails'] as $value) {
                    $values[] = $this->denormalizer->denormalize($value, \cedricziel\amznsponsoredproductsapiphp\Generated\Model\SponsoredProductsCopyCampaignErrorDetail::class, 'json', $context);
                }
                $object->setErrorDetails($values);
                unset($data['errorDetails']);
            }
            foreach ($data as $key => $value_1) {
                if (preg_match('/.*/', (string) $key)) {
                    $object[$key] = $value_1;
                }
            }

            return $object;
        }

        public function normalize(mixed $object, ?string $format = null, array $context = []): array|string|int|float|bool|\ArrayObject|null
        {
            $data = [];
            if ($object->isInitialized('targetMarketplaceId') && null !== $object->getTargetMarketplaceId()) {
                $data['targetMarketplaceId'] = $object->getTargetMarketplaceId();
            }
            if ($object->isInitialized('targetCampaignId') && null !== $object->getTargetCampaignId()) {
                $data['targetCampaignId'] = $object->getTargetCampaignId();
            }
            if ($object->isInitialized('percentageCompleted') && null !== $object->getPercentageCompleted()) {
                $data['percentageCompleted'] = $object->getPercentageCompleted();
            }
            if ($object->isInitialized('sourceMarketplaceId') && null !== $object->getSourceMarketplaceId()) {
                $data['sourceMarketplaceId'] = $object->getSourceMarketplaceId();
            }
            if ($object->isInitialized('sourceCampaignId') && null !== $object->getSourceCampaignId()) {
                $data['sourceCampaignId'] = $object->getSourceCampaignId();
            }
            if ($object->isInitialized('sourceAdvertiserId') && null !== $object->getSourceAdvertiserId()) {
                $data['sourceAdvertiserId'] = $object->getSourceAdvertiserId();
            }
            if ($object->isInitialized('targetAdvertiserId') && null !== $object->getTargetAdvertiserId()) {
                $data['targetAdvertiserId'] = $object->getTargetAdvertiserId();
            }
            if ($object->isInitialized('status') && null !== $object->getStatus()) {
                $data['status'] = $object->getStatus();
            }
            if ($object->isInitialized('errorDetails') && null !== $object->getErrorDetails()) {
                $values = [];
                foreach ($object->getErrorDetails() as $value) {
                    $values[] = $this->normalizer->normalize($value, 'json', $context);
                }
                $data['errorDetails'] = $values;
            }
            foreach ($object as $key => $value_1) {
                if (preg_match('/.*/', (string) $key)) {
                    $data[$key] = $value_1;
                }
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return [\cedricziel\amznsponsoredproductsapiphp\Generated\Model\SponsoredProductsCopyCampaignTaskDetails::class => false];
        }
    }
} else {
    class SponsoredProductsCopyCampaignTaskDetailsNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization($data, $type, ?string $format = null, array $context = []): bool
        {
            return \cedricziel\amznsponsoredproductsapiphp\Generated\Model\SponsoredProductsCopyCampaignTaskDetails::class === $type;
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && cedricziel\amznsponsoredproductsapiphp\Generated\Model\SponsoredProductsCopyCampaignTaskDetails::class === get_class($data);
        }

        public function denormalize($data, $type, $format = null, array $context = [])
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \cedricziel\amznsponsoredproductsapiphp\Generated\Model\SponsoredProductsCopyCampaignTaskDetails();
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('targetMarketplaceId', $data)) {
                $object->setTargetMarketplaceId($data['targetMarketplaceId']);
                unset($data['targetMarketplaceId']);
            }
            if (\array_key_exists('targetCampaignId', $data)) {
                $object->setTargetCampaignId($data['targetCampaignId']);
                unset($data['targetCampaignId']);
            }
            if (\array_key_exists('percentageCompleted', $data)) {
                $object->setPercentageCompleted($data['percentageCompleted']);
                unset($data['percentageCompleted']);
            }
            if (\array_key_exists('sourceMarketplaceId', $data)) {
                $object->setSourceMarketplaceId($data['sourceMarketplaceId']);
                unset($data['sourceMarketplaceId']);
            }
            if (\array_key_exists('sourceCampaignId', $data)) {
                $object->setSourceCampaignId($data['sourceCampaignId']);
                unset($data['sourceCampaignId']);
            }
            if (\array_key_exists('sourceAdvertiserId', $data)) {
                $object->setSourceAdvertiserId($data['sourceAdvertiserId']);
                unset($data['sourceAdvertiserId']);
            }
            if (\array_key_exists('targetAdvertiserId', $data)) {
                $object->setTargetAdvertiserId($data['targetAdvertiserId']);
                unset($data['targetAdvertiserId']);
            }
            if (\array_key_exists('status', $data)) {
                $object->setStatus($data['status']);
                unset($data['status']);
            }
            if (\array_key_exists('errorDetails', $data)) {
                $values = [];
                foreach ($data['errorDetails'] as $value) {
                    $values[] = $this->denormalizer->denormalize($value, \cedricziel\amznsponsoredproductsapiphp\Generated\Model\SponsoredProductsCopyCampaignErrorDetail::class, 'json', $context);
                }
                $object->setErrorDetails($values);
                unset($data['errorDetails']);
            }
            foreach ($data as $key => $value_1) {
                if (preg_match('/.*/', (string) $key)) {
                    $object[$key] = $value_1;
                }
            }

            return $object;
        }

        /**
         * @return array|string|int|float|bool|\ArrayObject|null
         */
        public function normalize($object, $format = null, array $context = [])
        {
            $data = [];
            if ($object->isInitialized('targetMarketplaceId') && null !== $object->getTargetMarketplaceId()) {
                $data['targetMarketplaceId'] = $object->getTargetMarketplaceId();
            }
            if ($object->isInitialized('targetCampaignId') && null !== $object->getTargetCampaignId()) {
                $data['targetCampaignId'] = $object->getTargetCampaignId();
            }
            if ($object->isInitialized('percentageCompleted') && null !== $object->getPercentageCompleted()) {
                $data['percentageCompleted'] = $object->getPercentageCompleted();
            }
            if ($object->isInitialized('sourceMarketplaceId') && null !== $object->getSourceMarketplaceId()) {
                $data['sourceMarketplaceId'] = $object->getSourceMarketplaceId();
            }
            if ($object->isInitialized('sourceCampaignId') && null !== $object->getSourceCampaignId()) {
                $data['sourceCampaignId'] = $object->getSourceCampaignId();
            }
            if ($object->isInitialized('sourceAdvertiserId') && null !== $object->getSourceAdvertiserId()) {
                $data['sourceAdvertiserId'] = $object->getSourceAdvertiserId();
            }
            if ($object->isInitialized('targetAdvertiserId') && null !== $object->getTargetAdvertiserId()) {
                $data['targetAdvertiserId'] = $object->getTargetAdvertiserId();
            }
            if ($object->isInitialized('status') && null !== $object->getStatus()) {
                $data['status'] = $object->getStatus();
            }
            if ($object->isInitialized('errorDetails') && null !== $object->getErrorDetails()) {
                $values = [];
                foreach ($object->getErrorDetails() as $value) {
                    $values[] = $this->normalizer->normalize($value, 'json', $context);
                }
                $data['errorDetails'] = $values;
            }
            foreach ($object as $key => $value_1) {
                if (preg_match('/.*/', (string) $key)) {
                    $data[$key] = $value_1;
                }
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return [\cedricziel\amznsponsoredproductsapiphp\Generated\Model\SponsoredProductsCopyCampaignTaskDetails::class => false];
        }
    }
}
