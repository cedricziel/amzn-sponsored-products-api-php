<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace cedricziel\amznsponsoredproductsapiphp\Generated\Model;

class SponsoredProductsCreateKeyword extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The unlocalized keyword text in the preferred locale of the advertiser.
     *
     * @var string
     */
    protected $nativeLanguageKeyword;
    /**
     * The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.
     *
     * @var string
     */
    protected $nativeLanguageLocale;
    /**
     * The identifer of the campaign to which the keyword is associated.
     *
     * @var string
     */
    protected $campaignId;
    /**
     * @var string
     */
    protected $matchType;
    /**
     * Entity state for create or update operation.
     *
     * @var string
     */
    protected $state;
    /**
     * Bid associated with this keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     *
     * @var float|null
     */
    protected $bid;
    /**
     * The identifier of the ad group to which this keyword is associated.
     *
     * @var string
     */
    protected $adGroupId;
    /**
     * The keyword text.
     *
     * @var string
     */
    protected $keywordText;

    /**
     * The unlocalized keyword text in the preferred locale of the advertiser.
     */
    public function getNativeLanguageKeyword(): string
    {
        return $this->nativeLanguageKeyword;
    }

    /**
     * The unlocalized keyword text in the preferred locale of the advertiser.
     */
    public function setNativeLanguageKeyword(string $nativeLanguageKeyword): self
    {
        $this->initialized['nativeLanguageKeyword'] = true;
        $this->nativeLanguageKeyword = $nativeLanguageKeyword;

        return $this;
    }

    /**
     * The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.
     */
    public function getNativeLanguageLocale(): string
    {
        return $this->nativeLanguageLocale;
    }

    /**
     * The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.
     */
    public function setNativeLanguageLocale(string $nativeLanguageLocale): self
    {
        $this->initialized['nativeLanguageLocale'] = true;
        $this->nativeLanguageLocale = $nativeLanguageLocale;

        return $this;
    }

    /**
     * The identifer of the campaign to which the keyword is associated.
     */
    public function getCampaignId(): string
    {
        return $this->campaignId;
    }

    /**
     * The identifer of the campaign to which the keyword is associated.
     */
    public function setCampaignId(string $campaignId): self
    {
        $this->initialized['campaignId'] = true;
        $this->campaignId = $campaignId;

        return $this;
    }

    public function getMatchType(): string
    {
        return $this->matchType;
    }

    public function setMatchType(string $matchType): self
    {
        $this->initialized['matchType'] = true;
        $this->matchType = $matchType;

        return $this;
    }

    /**
     * Entity state for create or update operation.
     */
    public function getState(): string
    {
        return $this->state;
    }

    /**
     * Entity state for create or update operation.
     */
    public function setState(string $state): self
    {
        $this->initialized['state'] = true;
        $this->state = $state;

        return $this;
    }

    /**
     * Bid associated with this keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     */
    public function getBid(): ?float
    {
        return $this->bid;
    }

    /**
     * Bid associated with this keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     */
    public function setBid(?float $bid): self
    {
        $this->initialized['bid'] = true;
        $this->bid = $bid;

        return $this;
    }

    /**
     * The identifier of the ad group to which this keyword is associated.
     */
    public function getAdGroupId(): string
    {
        return $this->adGroupId;
    }

    /**
     * The identifier of the ad group to which this keyword is associated.
     */
    public function setAdGroupId(string $adGroupId): self
    {
        $this->initialized['adGroupId'] = true;
        $this->adGroupId = $adGroupId;

        return $this;
    }

    /**
     * The keyword text.
     */
    public function getKeywordText(): string
    {
        return $this->keywordText;
    }

    /**
     * The keyword text.
     */
    public function setKeywordText(string $keywordText): self
    {
        $this->initialized['keywordText'] = true;
        $this->keywordText = $keywordText;

        return $this;
    }
}
