<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace cedricziel\amznsponsoredproductsapiphp\Generated\Model;

class GetTargetableAsinCountsRequest extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * List of Age Ranges. Use the GetRefinementsForCategory to retrieve Age Ranges. Age Ranges are only available for categories related to children's toys and games.
     *
     * @var list<AgeRange>
     */
    protected $ageRanges;
    /**
     * List of Brands.
     *
     * @var list<Brand>
     */
    protected $brands;
    /**
     * List of Genres. Use the GetRefinementsForCategory to retrieve Genre Node IDs. Genres are only available for categories related to books.
     *
     * @var list<Genre>
     */
    protected $genres;
    /**
     * Indicates if products have prime shipping.
     *
     * @var bool
     */
    protected $isPrimeShipping;
    /**
     * Rating range is restricted to integers between 0 and 5, inclusive. Min must be less than or equal to max. We use this to retrieve the number of targetable ASINs that falls within this rating range.
     *
     * @var RatingRange
     */
    protected $ratingRange;
    /**
     * The category node id. Please use the GetTargetableCategories API or GetCategoryRecommendationsForASINs API to retrieve category IDs.
     *
     * @var string
     */
    protected $category;
    /**
     * A range of prices. We use this to retrieve the number of targetable ASINs that falls within this price range.
     *
     * @var PriceRange
     */
    protected $priceRange;

    /**
     * List of Age Ranges. Use the GetRefinementsForCategory to retrieve Age Ranges. Age Ranges are only available for categories related to children's toys and games.
     *
     * @return list<AgeRange>
     */
    public function getAgeRanges(): array
    {
        return $this->ageRanges;
    }

    /**
     * List of Age Ranges. Use the GetRefinementsForCategory to retrieve Age Ranges. Age Ranges are only available for categories related to children's toys and games.
     *
     * @param list<AgeRange> $ageRanges
     */
    public function setAgeRanges(array $ageRanges): self
    {
        $this->initialized['ageRanges'] = true;
        $this->ageRanges = $ageRanges;

        return $this;
    }

    /**
     * List of Brands.
     *
     * @return list<Brand>
     */
    public function getBrands(): array
    {
        return $this->brands;
    }

    /**
     * List of Brands.
     *
     * @param list<Brand> $brands
     */
    public function setBrands(array $brands): self
    {
        $this->initialized['brands'] = true;
        $this->brands = $brands;

        return $this;
    }

    /**
     * List of Genres. Use the GetRefinementsForCategory to retrieve Genre Node IDs. Genres are only available for categories related to books.
     *
     * @return list<Genre>
     */
    public function getGenres(): array
    {
        return $this->genres;
    }

    /**
     * List of Genres. Use the GetRefinementsForCategory to retrieve Genre Node IDs. Genres are only available for categories related to books.
     *
     * @param list<Genre> $genres
     */
    public function setGenres(array $genres): self
    {
        $this->initialized['genres'] = true;
        $this->genres = $genres;

        return $this;
    }

    /**
     * Indicates if products have prime shipping.
     */
    public function getIsPrimeShipping(): bool
    {
        return $this->isPrimeShipping;
    }

    /**
     * Indicates if products have prime shipping.
     */
    public function setIsPrimeShipping(bool $isPrimeShipping): self
    {
        $this->initialized['isPrimeShipping'] = true;
        $this->isPrimeShipping = $isPrimeShipping;

        return $this;
    }

    /**
     * Rating range is restricted to integers between 0 and 5, inclusive. Min must be less than or equal to max. We use this to retrieve the number of targetable ASINs that falls within this rating range.
     */
    public function getRatingRange(): RatingRange
    {
        return $this->ratingRange;
    }

    /**
     * Rating range is restricted to integers between 0 and 5, inclusive. Min must be less than or equal to max. We use this to retrieve the number of targetable ASINs that falls within this rating range.
     */
    public function setRatingRange(RatingRange $ratingRange): self
    {
        $this->initialized['ratingRange'] = true;
        $this->ratingRange = $ratingRange;

        return $this;
    }

    /**
     * The category node id. Please use the GetTargetableCategories API or GetCategoryRecommendationsForASINs API to retrieve category IDs.
     */
    public function getCategory(): string
    {
        return $this->category;
    }

    /**
     * The category node id. Please use the GetTargetableCategories API or GetCategoryRecommendationsForASINs API to retrieve category IDs.
     */
    public function setCategory(string $category): self
    {
        $this->initialized['category'] = true;
        $this->category = $category;

        return $this;
    }

    /**
     * A range of prices. We use this to retrieve the number of targetable ASINs that falls within this price range.
     */
    public function getPriceRange(): PriceRange
    {
        return $this->priceRange;
    }

    /**
     * A range of prices. We use this to retrieve the number of targetable ASINs that falls within this price range.
     */
    public function setPriceRange(PriceRange $priceRange): self
    {
        $this->initialized['priceRange'] = true;
        $this->priceRange = $priceRange;

        return $this;
    }
}
