<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CedricZiel\AmznSponsoredProductsApiPHP\Generated\Model;

class SponsoredProductsNewCampaignDetails extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The end date of the new target promotion group entities. The format of the date is YYYY-MM-DD.
     *
     * @var \DateTime
     */
    protected $endDate;
    /**
     * The name prefix to be used for the entities under the target promotion group. e.g. if the namePrefix
     * is ABC, we will create a keyword campaign with the name 'ABC-ManualKeywordTargeting-Campaign-AutoGenerated'.
     *
     * @var string
     */
    protected $namePrefix;
    /**
     * Specifies bidding controls.
     *
     * @var SponsoredProductsNewCampaignDynamicBidding
     */
    protected $dynamicBidding;
    /**
     * The start date of the new target promotion group entities. Default is today's date. The format of the date is YYYY-MM-DD.
     *
     * @var \DateTime
     */
    protected $startDate;
    /**
     * The default bid value that gets applied if no bid is provided for the target. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     *
     * @var float
     */
    protected $defaultBid;
    /**
     * The budget for the campaigns in the target promotion group.
     *
     * @var SponsoredProductsNewCampaignBudget
     */
    protected $budget;
    /**
     * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
     *
     * @var array<string, string>
     */
    protected $tags;

    /**
     * The end date of the new target promotion group entities. The format of the date is YYYY-MM-DD.
     */
    public function getEndDate(): \DateTime
    {
        return $this->endDate;
    }

    /**
     * The end date of the new target promotion group entities. The format of the date is YYYY-MM-DD.
     */
    public function setEndDate(\DateTime $endDate): self
    {
        $this->initialized['endDate'] = true;
        $this->endDate = $endDate;

        return $this;
    }

    /**
     * The name prefix to be used for the entities under the target promotion group. e.g. if the namePrefix
     * is ABC, we will create a keyword campaign with the name 'ABC-ManualKeywordTargeting-Campaign-AutoGenerated'.
     */
    public function getNamePrefix(): string
    {
        return $this->namePrefix;
    }

    /**
     * The name prefix to be used for the entities under the target promotion group. e.g. if the namePrefix
     * is ABC, we will create a keyword campaign with the name 'ABC-ManualKeywordTargeting-Campaign-AutoGenerated'.
     */
    public function setNamePrefix(string $namePrefix): self
    {
        $this->initialized['namePrefix'] = true;
        $this->namePrefix = $namePrefix;

        return $this;
    }

    /**
     * Specifies bidding controls.
     */
    public function getDynamicBidding(): SponsoredProductsNewCampaignDynamicBidding
    {
        return $this->dynamicBidding;
    }

    /**
     * Specifies bidding controls.
     */
    public function setDynamicBidding(SponsoredProductsNewCampaignDynamicBidding $dynamicBidding): self
    {
        $this->initialized['dynamicBidding'] = true;
        $this->dynamicBidding = $dynamicBidding;

        return $this;
    }

    /**
     * The start date of the new target promotion group entities. Default is today's date. The format of the date is YYYY-MM-DD.
     */
    public function getStartDate(): \DateTime
    {
        return $this->startDate;
    }

    /**
     * The start date of the new target promotion group entities. Default is today's date. The format of the date is YYYY-MM-DD.
     */
    public function setStartDate(\DateTime $startDate): self
    {
        $this->initialized['startDate'] = true;
        $this->startDate = $startDate;

        return $this;
    }

    /**
     * The default bid value that gets applied if no bid is provided for the target. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     */
    public function getDefaultBid(): float
    {
        return $this->defaultBid;
    }

    /**
     * The default bid value that gets applied if no bid is provided for the target. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     */
    public function setDefaultBid(float $defaultBid): self
    {
        $this->initialized['defaultBid'] = true;
        $this->defaultBid = $defaultBid;

        return $this;
    }

    /**
     * The budget for the campaigns in the target promotion group.
     */
    public function getBudget(): SponsoredProductsNewCampaignBudget
    {
        return $this->budget;
    }

    /**
     * The budget for the campaigns in the target promotion group.
     */
    public function setBudget(SponsoredProductsNewCampaignBudget $budget): self
    {
        $this->initialized['budget'] = true;
        $this->budget = $budget;

        return $this;
    }

    /**
     * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
     *
     * @return array<string, string>
     */
    public function getTags(): iterable
    {
        return $this->tags;
    }

    /**
     * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
     *
     * @param array<string, string> $tags
     */
    public function setTags(iterable $tags): self
    {
        $this->initialized['tags'] = true;
        $this->tags = $tags;

        return $this;
    }
}
