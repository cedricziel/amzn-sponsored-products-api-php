<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace cedricziel\amznsponsoredproductsapiphp\Generated\Model;

class SponsoredProductsMatchedAdGroup extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The name of the adGroup.
     *
     * @var string
     */
    protected $adGroupName;
    /**
     * The state of the campaign that the adGroup belongs to.
     *
     * @var string
     */
    protected $campaignState;
    /**
     * Targeting type of a campaign.
     *
     * @var string
     */
    protected $campaignTargetingType;
    /**
     * Targeting type of an adGroup.
     *
     * @var string
     */
    protected $adGroupTargetingType;
    /**
     * The unique identifier of the of the campaign that the adGroup belongs to.
     *
     * @var string
     */
    protected $campaignId;
    /**
     * The state of the adGroup.
     *
     * @var string
     */
    protected $state;
    /**
     * Name of the campaign that the adGroup belongs to.
     *
     * @var string
     */
    protected $campaignName;
    /**
     * The unique identifier of the adGroup that contains the same ASIN/SKUs as the AT adGroup in the request.
     *
     * @var string
     */
    protected $adGroupId;
    /**
     * The defualt bid of the adGroup.
     *
     * @var float
     */
    protected $defaultBid;
    /**
     * The budget of the campaign that the adGroup belongs to.
     *
     * @var float
     */
    protected $budget;

    /**
     * The name of the adGroup.
     */
    public function getAdGroupName(): string
    {
        return $this->adGroupName;
    }

    /**
     * The name of the adGroup.
     */
    public function setAdGroupName(string $adGroupName): self
    {
        $this->initialized['adGroupName'] = true;
        $this->adGroupName = $adGroupName;

        return $this;
    }

    /**
     * The state of the campaign that the adGroup belongs to.
     */
    public function getCampaignState(): string
    {
        return $this->campaignState;
    }

    /**
     * The state of the campaign that the adGroup belongs to.
     */
    public function setCampaignState(string $campaignState): self
    {
        $this->initialized['campaignState'] = true;
        $this->campaignState = $campaignState;

        return $this;
    }

    /**
     * Targeting type of a campaign.
     */
    public function getCampaignTargetingType(): string
    {
        return $this->campaignTargetingType;
    }

    /**
     * Targeting type of a campaign.
     */
    public function setCampaignTargetingType(string $campaignTargetingType): self
    {
        $this->initialized['campaignTargetingType'] = true;
        $this->campaignTargetingType = $campaignTargetingType;

        return $this;
    }

    /**
     * Targeting type of an adGroup.
     */
    public function getAdGroupTargetingType(): string
    {
        return $this->adGroupTargetingType;
    }

    /**
     * Targeting type of an adGroup.
     */
    public function setAdGroupTargetingType(string $adGroupTargetingType): self
    {
        $this->initialized['adGroupTargetingType'] = true;
        $this->adGroupTargetingType = $adGroupTargetingType;

        return $this;
    }

    /**
     * The unique identifier of the of the campaign that the adGroup belongs to.
     */
    public function getCampaignId(): string
    {
        return $this->campaignId;
    }

    /**
     * The unique identifier of the of the campaign that the adGroup belongs to.
     */
    public function setCampaignId(string $campaignId): self
    {
        $this->initialized['campaignId'] = true;
        $this->campaignId = $campaignId;

        return $this;
    }

    /**
     * The state of the adGroup.
     */
    public function getState(): string
    {
        return $this->state;
    }

    /**
     * The state of the adGroup.
     */
    public function setState(string $state): self
    {
        $this->initialized['state'] = true;
        $this->state = $state;

        return $this;
    }

    /**
     * Name of the campaign that the adGroup belongs to.
     */
    public function getCampaignName(): string
    {
        return $this->campaignName;
    }

    /**
     * Name of the campaign that the adGroup belongs to.
     */
    public function setCampaignName(string $campaignName): self
    {
        $this->initialized['campaignName'] = true;
        $this->campaignName = $campaignName;

        return $this;
    }

    /**
     * The unique identifier of the adGroup that contains the same ASIN/SKUs as the AT adGroup in the request.
     */
    public function getAdGroupId(): string
    {
        return $this->adGroupId;
    }

    /**
     * The unique identifier of the adGroup that contains the same ASIN/SKUs as the AT adGroup in the request.
     */
    public function setAdGroupId(string $adGroupId): self
    {
        $this->initialized['adGroupId'] = true;
        $this->adGroupId = $adGroupId;

        return $this;
    }

    /**
     * The defualt bid of the adGroup.
     */
    public function getDefaultBid(): float
    {
        return $this->defaultBid;
    }

    /**
     * The defualt bid of the adGroup.
     */
    public function setDefaultBid(float $defaultBid): self
    {
        $this->initialized['defaultBid'] = true;
        $this->defaultBid = $defaultBid;

        return $this;
    }

    /**
     * The budget of the campaign that the adGroup belongs to.
     */
    public function getBudget(): float
    {
        return $this->budget;
    }

    /**
     * The budget of the campaign that the adGroup belongs to.
     */
    public function setBudget(float $budget): self
    {
        $this->initialized['budget'] = true;
        $this->budget = $budget;

        return $this;
    }
}
