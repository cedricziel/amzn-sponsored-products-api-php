<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace cedricziel\amznsponsoredproductsapiphp\Generated\Model;

class SponsoredProductsDraftKeyword extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The identifier of the draft keyword.
     *
     * @var string
     */
    protected $keywordId;
    /**
     * The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.
     *
     * @var string
     */
    protected $nativeLanguageLocale;
    /**
     * The identifier of the campaign to which the draft keyword is associated.
     *
     * @var string
     */
    protected $campaignId;
    /**
     * @var string
     */
    protected $matchType;
    /**
     * The unlocalized draft keyword text in the preferred locale of the advertiser.
     *
     * @var string
     */
    protected $nativeLanguageDraftKeyword;
    /**
     * Bid associated with this draft keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     *
     * @var float|null
     */
    protected $bid;
    /**
     * The identifier of the ad group to which this draft keyword is associated.
     *
     * @var string
     */
    protected $adGroupId;
    /**
     * The draft keyword text.
     *
     * @var string
     */
    protected $keywordText;
    /**
     * @var SponsoredProductsDraftKeywordExtendedData
     */
    protected $extendedData;

    /**
     * The identifier of the draft keyword.
     */
    public function getKeywordId(): string
    {
        return $this->keywordId;
    }

    /**
     * The identifier of the draft keyword.
     */
    public function setKeywordId(string $keywordId): self
    {
        $this->initialized['keywordId'] = true;
        $this->keywordId = $keywordId;

        return $this;
    }

    /**
     * The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.
     */
    public function getNativeLanguageLocale(): string
    {
        return $this->nativeLanguageLocale;
    }

    /**
     * The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.
     */
    public function setNativeLanguageLocale(string $nativeLanguageLocale): self
    {
        $this->initialized['nativeLanguageLocale'] = true;
        $this->nativeLanguageLocale = $nativeLanguageLocale;

        return $this;
    }

    /**
     * The identifier of the campaign to which the draft keyword is associated.
     */
    public function getCampaignId(): string
    {
        return $this->campaignId;
    }

    /**
     * The identifier of the campaign to which the draft keyword is associated.
     */
    public function setCampaignId(string $campaignId): self
    {
        $this->initialized['campaignId'] = true;
        $this->campaignId = $campaignId;

        return $this;
    }

    public function getMatchType(): string
    {
        return $this->matchType;
    }

    public function setMatchType(string $matchType): self
    {
        $this->initialized['matchType'] = true;
        $this->matchType = $matchType;

        return $this;
    }

    /**
     * The unlocalized draft keyword text in the preferred locale of the advertiser.
     */
    public function getNativeLanguageDraftKeyword(): string
    {
        return $this->nativeLanguageDraftKeyword;
    }

    /**
     * The unlocalized draft keyword text in the preferred locale of the advertiser.
     */
    public function setNativeLanguageDraftKeyword(string $nativeLanguageDraftKeyword): self
    {
        $this->initialized['nativeLanguageDraftKeyword'] = true;
        $this->nativeLanguageDraftKeyword = $nativeLanguageDraftKeyword;

        return $this;
    }

    /**
     * Bid associated with this draft keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     */
    public function getBid(): ?float
    {
        return $this->bid;
    }

    /**
     * Bid associated with this draft keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     */
    public function setBid(?float $bid): self
    {
        $this->initialized['bid'] = true;
        $this->bid = $bid;

        return $this;
    }

    /**
     * The identifier of the ad group to which this draft keyword is associated.
     */
    public function getAdGroupId(): string
    {
        return $this->adGroupId;
    }

    /**
     * The identifier of the ad group to which this draft keyword is associated.
     */
    public function setAdGroupId(string $adGroupId): self
    {
        $this->initialized['adGroupId'] = true;
        $this->adGroupId = $adGroupId;

        return $this;
    }

    /**
     * The draft keyword text.
     */
    public function getKeywordText(): string
    {
        return $this->keywordText;
    }

    /**
     * The draft keyword text.
     */
    public function setKeywordText(string $keywordText): self
    {
        $this->initialized['keywordText'] = true;
        $this->keywordText = $keywordText;

        return $this;
    }

    public function getExtendedData(): SponsoredProductsDraftKeywordExtendedData
    {
        return $this->extendedData;
    }

    public function setExtendedData(SponsoredProductsDraftKeywordExtendedData $extendedData): self
    {
        $this->initialized['extendedData'] = true;
        $this->extendedData = $extendedData;

        return $this;
    }
}
