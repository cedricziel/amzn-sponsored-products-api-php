<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace cedricziel\amznsponsoredproductsapiphp\Generated\Model;

class GetCategoryRecommendationsForAsinsRequest extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * List of input ASINs. This API does not check if the ASINs are valid ASINs.
     *
     * @var list<string>
     */
    protected $asins;
    /**
     * Enable this if you would like to retrieve categories which are ancestor nodes of the original recommended categories. This may increase the number of categories returned, but decrease the relevancy of those categories.
     *
     * @var bool
     */
    protected $includeAncestor;

    /**
     * List of input ASINs. This API does not check if the ASINs are valid ASINs.
     *
     * @return list<string>
     */
    public function getAsins(): array
    {
        return $this->asins;
    }

    /**
     * List of input ASINs. This API does not check if the ASINs are valid ASINs.
     *
     * @param list<string> $asins
     */
    public function setAsins(array $asins): self
    {
        $this->initialized['asins'] = true;
        $this->asins = $asins;

        return $this;
    }

    /**
     * Enable this if you would like to retrieve categories which are ancestor nodes of the original recommended categories. This may increase the number of categories returned, but decrease the relevancy of those categories.
     */
    public function getIncludeAncestor(): bool
    {
        return $this->includeAncestor;
    }

    /**
     * Enable this if you would like to retrieve categories which are ancestor nodes of the original recommended categories. This may increase the number of categories returned, but decrease the relevancy of those categories.
     */
    public function setIncludeAncestor(bool $includeAncestor): self
    {
        $this->initialized['includeAncestor'] = true;
        $this->includeAncestor = $includeAncestor;

        return $this;
    }
}
