<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace cedricziel\amznsponsoredproductsapiphp\Generated\Model;

class OptimizationRulesAPISwaggerRuleRecommendation extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The type of the optimization rule. Only Support BID as of now.
     *
     * @var string
     */
    protected $ruleCategory;
    /**
     * Id of the campaign for which the rule is recommended.
     *
     * @var string
     */
    protected $campaignId;
    /**
     * The sub-category of the optimization rule. Only Support SCHEDULE as of now.
     *
     * @var string
     */
    protected $ruleSubCategory;
    /**
     * @var OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId
     */
    protected $recommendation;
    /**
     * Unique id for the recommendation.
     *
     * @var string
     */
    protected $recommendationId;
    /**
     * Unique id for the rule if it already exists.
     *
     * @var string
     */
    protected $optimizationRuleId;
    /**
     * Reason for recommendation.
     *
     * @var string
     */
    protected $recommendationReason;

    /**
     * The type of the optimization rule. Only Support BID as of now.
     */
    public function getRuleCategory(): string
    {
        return $this->ruleCategory;
    }

    /**
     * The type of the optimization rule. Only Support BID as of now.
     */
    public function setRuleCategory(string $ruleCategory): self
    {
        $this->initialized['ruleCategory'] = true;
        $this->ruleCategory = $ruleCategory;

        return $this;
    }

    /**
     * Id of the campaign for which the rule is recommended.
     */
    public function getCampaignId(): string
    {
        return $this->campaignId;
    }

    /**
     * Id of the campaign for which the rule is recommended.
     */
    public function setCampaignId(string $campaignId): self
    {
        $this->initialized['campaignId'] = true;
        $this->campaignId = $campaignId;

        return $this;
    }

    /**
     * The sub-category of the optimization rule. Only Support SCHEDULE as of now.
     */
    public function getRuleSubCategory(): string
    {
        return $this->ruleSubCategory;
    }

    /**
     * The sub-category of the optimization rule. Only Support SCHEDULE as of now.
     */
    public function setRuleSubCategory(string $ruleSubCategory): self
    {
        $this->initialized['ruleSubCategory'] = true;
        $this->ruleSubCategory = $ruleSubCategory;

        return $this;
    }

    public function getRecommendation(): OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId
    {
        return $this->recommendation;
    }

    public function setRecommendation(OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId $recommendation): self
    {
        $this->initialized['recommendation'] = true;
        $this->recommendation = $recommendation;

        return $this;
    }

    /**
     * Unique id for the recommendation.
     */
    public function getRecommendationId(): string
    {
        return $this->recommendationId;
    }

    /**
     * Unique id for the recommendation.
     */
    public function setRecommendationId(string $recommendationId): self
    {
        $this->initialized['recommendationId'] = true;
        $this->recommendationId = $recommendationId;

        return $this;
    }

    /**
     * Unique id for the rule if it already exists.
     */
    public function getOptimizationRuleId(): string
    {
        return $this->optimizationRuleId;
    }

    /**
     * Unique id for the rule if it already exists.
     */
    public function setOptimizationRuleId(string $optimizationRuleId): self
    {
        $this->initialized['optimizationRuleId'] = true;
        $this->optimizationRuleId = $optimizationRuleId;

        return $this;
    }

    /**
     * Reason for recommendation.
     */
    public function getRecommendationReason(): string
    {
        return $this->recommendationReason;
    }

    /**
     * Reason for recommendation.
     */
    public function setRecommendationReason(string $recommendationReason): self
    {
        $this->initialized['recommendationReason'] = true;
        $this->recommendationReason = $recommendationReason;

        return $this;
    }
}
