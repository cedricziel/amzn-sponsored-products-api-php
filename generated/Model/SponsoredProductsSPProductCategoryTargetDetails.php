<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace cedricziel\amznsponsoredproductsapiphp\Generated\Model;

class SponsoredProductsSPProductCategoryTargetDetails extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The age range ID to target.
     *
     * @var string
     */
    protected $productAgeRangeId;
    /**
     * Refinement to target products with a price less than the value within the product category.
     *
     * @var float
     */
    protected $productPriceLessThan;
    /**
     * Target based on if a product is Prime-shipping eligible.
     *
     * @var bool
     */
    protected $productPrimeShippingEligible;
    /**
     * The resolved product category.
     *
     * @var string
     */
    protected $productCategoryIdResolved;
    /**
     * The brand ID to target.
     *
     * @var string
     */
    protected $productBrandId;
    /**
     * The resolved name of the brand.
     *
     * @var string
     */
    protected $productBrandIdResolved;
    /**
     * Refinement to target products with a rating less than the value within the product category.
     *
     * @var float
     */
    protected $productRatingLessThan;
    /**
     * The product genre ID to target.
     *
     * @var string
     */
    protected $productGenreId;
    /**
     * The product category ID to target.
     *
     * @var string
     */
    protected $productCategoryId;
    /**
     * Refinement to target products with a rating greater than the value within the product category.
     *
     * @var float
     */
    protected $productRatingGreaterThan;
    /**
     * The resolved age range to target.
     *
     * @var string
     */
    protected $productAgeRangeIdResolved;
    /**
     * The resolved product genre to target.
     *
     * @var string
     */
    protected $productGenreIdResolved;
    /**
     * Refinement to target products with a price greater than the value within the product category.
     *
     * @var float
     */
    protected $productPriceGreaterThan;

    /**
     * The age range ID to target.
     */
    public function getProductAgeRangeId(): string
    {
        return $this->productAgeRangeId;
    }

    /**
     * The age range ID to target.
     */
    public function setProductAgeRangeId(string $productAgeRangeId): self
    {
        $this->initialized['productAgeRangeId'] = true;
        $this->productAgeRangeId = $productAgeRangeId;

        return $this;
    }

    /**
     * Refinement to target products with a price less than the value within the product category.
     */
    public function getProductPriceLessThan(): float
    {
        return $this->productPriceLessThan;
    }

    /**
     * Refinement to target products with a price less than the value within the product category.
     */
    public function setProductPriceLessThan(float $productPriceLessThan): self
    {
        $this->initialized['productPriceLessThan'] = true;
        $this->productPriceLessThan = $productPriceLessThan;

        return $this;
    }

    /**
     * Target based on if a product is Prime-shipping eligible.
     */
    public function getProductPrimeShippingEligible(): bool
    {
        return $this->productPrimeShippingEligible;
    }

    /**
     * Target based on if a product is Prime-shipping eligible.
     */
    public function setProductPrimeShippingEligible(bool $productPrimeShippingEligible): self
    {
        $this->initialized['productPrimeShippingEligible'] = true;
        $this->productPrimeShippingEligible = $productPrimeShippingEligible;

        return $this;
    }

    /**
     * The resolved product category.
     */
    public function getProductCategoryIdResolved(): string
    {
        return $this->productCategoryIdResolved;
    }

    /**
     * The resolved product category.
     */
    public function setProductCategoryIdResolved(string $productCategoryIdResolved): self
    {
        $this->initialized['productCategoryIdResolved'] = true;
        $this->productCategoryIdResolved = $productCategoryIdResolved;

        return $this;
    }

    /**
     * The brand ID to target.
     */
    public function getProductBrandId(): string
    {
        return $this->productBrandId;
    }

    /**
     * The brand ID to target.
     */
    public function setProductBrandId(string $productBrandId): self
    {
        $this->initialized['productBrandId'] = true;
        $this->productBrandId = $productBrandId;

        return $this;
    }

    /**
     * The resolved name of the brand.
     */
    public function getProductBrandIdResolved(): string
    {
        return $this->productBrandIdResolved;
    }

    /**
     * The resolved name of the brand.
     */
    public function setProductBrandIdResolved(string $productBrandIdResolved): self
    {
        $this->initialized['productBrandIdResolved'] = true;
        $this->productBrandIdResolved = $productBrandIdResolved;

        return $this;
    }

    /**
     * Refinement to target products with a rating less than the value within the product category.
     */
    public function getProductRatingLessThan(): float
    {
        return $this->productRatingLessThan;
    }

    /**
     * Refinement to target products with a rating less than the value within the product category.
     */
    public function setProductRatingLessThan(float $productRatingLessThan): self
    {
        $this->initialized['productRatingLessThan'] = true;
        $this->productRatingLessThan = $productRatingLessThan;

        return $this;
    }

    /**
     * The product genre ID to target.
     */
    public function getProductGenreId(): string
    {
        return $this->productGenreId;
    }

    /**
     * The product genre ID to target.
     */
    public function setProductGenreId(string $productGenreId): self
    {
        $this->initialized['productGenreId'] = true;
        $this->productGenreId = $productGenreId;

        return $this;
    }

    /**
     * The product category ID to target.
     */
    public function getProductCategoryId(): string
    {
        return $this->productCategoryId;
    }

    /**
     * The product category ID to target.
     */
    public function setProductCategoryId(string $productCategoryId): self
    {
        $this->initialized['productCategoryId'] = true;
        $this->productCategoryId = $productCategoryId;

        return $this;
    }

    /**
     * Refinement to target products with a rating greater than the value within the product category.
     */
    public function getProductRatingGreaterThan(): float
    {
        return $this->productRatingGreaterThan;
    }

    /**
     * Refinement to target products with a rating greater than the value within the product category.
     */
    public function setProductRatingGreaterThan(float $productRatingGreaterThan): self
    {
        $this->initialized['productRatingGreaterThan'] = true;
        $this->productRatingGreaterThan = $productRatingGreaterThan;

        return $this;
    }

    /**
     * The resolved age range to target.
     */
    public function getProductAgeRangeIdResolved(): string
    {
        return $this->productAgeRangeIdResolved;
    }

    /**
     * The resolved age range to target.
     */
    public function setProductAgeRangeIdResolved(string $productAgeRangeIdResolved): self
    {
        $this->initialized['productAgeRangeIdResolved'] = true;
        $this->productAgeRangeIdResolved = $productAgeRangeIdResolved;

        return $this;
    }

    /**
     * The resolved product genre to target.
     */
    public function getProductGenreIdResolved(): string
    {
        return $this->productGenreIdResolved;
    }

    /**
     * The resolved product genre to target.
     */
    public function setProductGenreIdResolved(string $productGenreIdResolved): self
    {
        $this->initialized['productGenreIdResolved'] = true;
        $this->productGenreIdResolved = $productGenreIdResolved;

        return $this;
    }

    /**
     * Refinement to target products with a price greater than the value within the product category.
     */
    public function getProductPriceGreaterThan(): float
    {
        return $this->productPriceGreaterThan;
    }

    /**
     * Refinement to target products with a price greater than the value within the product category.
     */
    public function setProductPriceGreaterThan(float $productPriceGreaterThan): self
    {
        $this->initialized['productPriceGreaterThan'] = true;
        $this->productPriceGreaterThan = $productPriceGreaterThan;

        return $this;
    }
}
