<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace CedricZiel\AmznSponsoredProductsApiPHP\Generated\Model;

class SponsoredProductsTarget extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The id of the target promotion group.
     *
     * @var string
     */
    protected $targetPromotionGroupId;
    /**
     * The id of the target.
     *
     * @var string
     */
    protected $targetId;
    /**
     * The match type (for KEYWORDs) or the expression type (for PRODUCT). One of QUERY_BROAD_MATCHES,
     * QUERY_EXACT_MATCHES, QUERY_PHRASE_MATCHES, ASIN_SAME_AS, ASIN_EXPANDED_FROM.
     *
     * @var string
     */
    protected $expressionType;
    /**
     * The adGroupId of the manual-targeting campaign where the target belongs.
     *
     * @var string
     */
    protected $manualTargetingAdGroupId;
    /**
     * The keyword text or the product ASIN of the target.
     *
     * @var string
     */
    protected $target;

    /**
     * The id of the target promotion group.
     */
    public function getTargetPromotionGroupId(): string
    {
        return $this->targetPromotionGroupId;
    }

    /**
     * The id of the target promotion group.
     */
    public function setTargetPromotionGroupId(string $targetPromotionGroupId): self
    {
        $this->initialized['targetPromotionGroupId'] = true;
        $this->targetPromotionGroupId = $targetPromotionGroupId;

        return $this;
    }

    /**
     * The id of the target.
     */
    public function getTargetId(): string
    {
        return $this->targetId;
    }

    /**
     * The id of the target.
     */
    public function setTargetId(string $targetId): self
    {
        $this->initialized['targetId'] = true;
        $this->targetId = $targetId;

        return $this;
    }

    /**
     * The match type (for KEYWORDs) or the expression type (for PRODUCT). One of QUERY_BROAD_MATCHES,
     * QUERY_EXACT_MATCHES, QUERY_PHRASE_MATCHES, ASIN_SAME_AS, ASIN_EXPANDED_FROM.
     */
    public function getExpressionType(): string
    {
        return $this->expressionType;
    }

    /**
     * The match type (for KEYWORDs) or the expression type (for PRODUCT). One of QUERY_BROAD_MATCHES,
     * QUERY_EXACT_MATCHES, QUERY_PHRASE_MATCHES, ASIN_SAME_AS, ASIN_EXPANDED_FROM.
     */
    public function setExpressionType(string $expressionType): self
    {
        $this->initialized['expressionType'] = true;
        $this->expressionType = $expressionType;

        return $this;
    }

    /**
     * The adGroupId of the manual-targeting campaign where the target belongs.
     */
    public function getManualTargetingAdGroupId(): string
    {
        return $this->manualTargetingAdGroupId;
    }

    /**
     * The adGroupId of the manual-targeting campaign where the target belongs.
     */
    public function setManualTargetingAdGroupId(string $manualTargetingAdGroupId): self
    {
        $this->initialized['manualTargetingAdGroupId'] = true;
        $this->manualTargetingAdGroupId = $manualTargetingAdGroupId;

        return $this;
    }

    /**
     * The keyword text or the product ASIN of the target.
     */
    public function getTarget(): string
    {
        return $this->target;
    }

    /**
     * The keyword text or the product ASIN of the target.
     */
    public function setTarget(string $target): self
    {
        $this->initialized['target'] = true;
        $this->target = $target;

        return $this;
    }
}
